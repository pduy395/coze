"""edit fuction

Revision ID: 45f63673f1ad
Revises: a3e345e8b69a
Create Date: 2024-08-05 10:41:48.662246

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '45f63673f1ad'
down_revision: Union[str, None] = 'a3e345e8b69a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")
    op.execute("""create or replace function changepassword("current_plain_password" text, "new_plain_password" text, "current_id" uuid)
                returns varchar
                language plpgsql
                security definer
                as $$
                DECLARE
                encpass auth.users.encrypted_password%type;
                BEGIN
                SELECT encrypted_password
                FROM auth.users
                INTO encpass
                WHERE id = current_id and encrypted_password = crypt(current_plain_password, auth.users.encrypted_password);

                -- Check the currect password and update
                IF NOT FOUND THEN
                    return 'incorrect';
                else
                    UPDATE auth.users SET encrypted_password = crypt(new_plain_password, gen_salt('bf')) WHERE id = current_id;
                    return 'success';
                END IF;

                END;
                $$""")
    op.execute("""CREATE OR REPLACE FUNCTION update_document_indices(f_id INT, i INT)
                RETURNS VOID LANGUAGE plpgsql AS $$
                BEGIN
                    UPDATE document
                    SET index = index + 1
                    WHERE document.file_id = f_id
                    AND document.index >= i;
                END;
                $$;""")
    op.execute("""CREATE OR REPLACE FUNCTION match_documents_4 (
                query_embedding VECTOR(1536),
                knowledge_ids INT[]
                ) RETURNS TABLE (
                content TEXT,
                similarity FLOAT
                ) LANGUAGE plpgsql AS $$
                BEGIN
                RETURN QUERY
                SELECT 
                    document.content::TEXT,  -- Rõ ràng chỉ định cột từ bảng
                    1 - (document.vector <=> query_embedding) AS similarity
                FROM document
                WHERE document.knowledge_id = ANY(knowledge_ids)
                ORDER BY document.vector <=> query_embedding
                LIMIT 20;
                END;
                $$;""")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP FUNCTION IF EXISTS update_document_indices(integer,integer) ")
    op.execute("""DROP FUNCTION IF EXISTS match_documents_4 (
                query_embedding VECTOR(1536),
                knowledge_ids INT[]
                );""")
    op.execute("DROP FUNCTION IF EXISTS changepassword(TEXT, TEXT, UUID);")
    op.execute("DROP EXTENSION IF EXISTS vector;")
    # ### end Alembic commands ###
